{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.3"
    },
    "colab": {
      "name": "Practice Questions.ipynb",
      "provenance": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sudhanshi675/Learn-analytics/blob/main/Python%20%20Basic%20Questions.\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gt86txXPoL3i"
      },
      "source": [
        "##### Q1\n",
        "\n",
        "What will the output be of ((500//7) % 5) ** 3?\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i8KRxGSQslrs",
        "outputId": "ec43f485-a9a4-4b86-8a8b-799adb942ac1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "((500//7) % 5) ** 3"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0nW5uBA5oL3m"
      },
      "source": [
        "##### Q2\n",
        "\n",
        "How will you extract ‘love’ from the string S = “I love Python”? (More than one option may be correct.)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yeXAfHMIoprB",
        "outputId": "0179bc3b-8b56-4cb4-ff6d-745ed4baa83a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "string=[\"I love python\"]\n",
        "print(string[0][2:6])"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "love\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Mg67Qc6hoL3n"
      },
      "source": [
        "##### Q3\n",
        "\n",
        "What will the output of 3 * 3 ** 3 be?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dp0CNMGdsqlF",
        "outputId": "24d47c61-60e6-4996-c12b-3fb75aced21c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        " 3*3** 3"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "81"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BuTiGuvyoL3o"
      },
      "source": [
        "##### Q4\n",
        "\n",
        "If you have a tuple T = (3, 5, 7, 11), what will the output of T.append(9) be?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XCwLujxWswiR",
        "outputId": "61521efb-6b33-4bfe-e75c-38b87c5a5af8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        }
      },
      "source": [
        "T = (3, 5, 7, 11)\n",
        "T.append(9)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-6-9d8c21e3c639>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mT\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m7\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m11\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mT\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute 'append'"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6ZkYYnzToL3o"
      },
      "source": [
        "##### Q5\n",
        "\n",
        "What will the output of the following program be?\n",
        "\n",
        "L1 = ['Vikas', 'Akshay', 'Sanskar', 'Mahima']\n",
        "\n",
        "print(L1[1][-1])"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2Pu2HezGs96c",
        "outputId": "dc181342-c048-45f2-ef5c-794fe4774a8a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "L1 = ['Vikas', 'Akshay', 'Sanskar', 'Mahima']\n",
        "\n",
        "print(L1[1][-1])"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "y\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "egfuu11OoL3p"
      },
      "source": [
        "##### Q6\n",
        "\n",
        "What will be the output ?\n",
        "\n",
        "l = [32, 34, 12, 27, 33]\n",
        "\n",
        "l.append([14, 19])\n",
        "\n",
        "print(len(l))"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cYYBbMbJoL3q"
      },
      "source": [
        "l = [32, 34, 12, 27, 33]"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a0w4wkTZoL3r"
      },
      "source": [
        "l.append([14, 19])"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xuacWtQsoL3r",
        "outputId": "d83b5ae6-0cc3-4b7f-8524-2f8016e98e12",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "print(len(l))"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "6\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ltg5m5GBtLkT",
        "outputId": "e13d6442-34d7-4fc5-b320-95ffa03df741",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "print(l)"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[32, 34, 12, 27, 33, [14, 19]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pBBb_uYutNsM"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}